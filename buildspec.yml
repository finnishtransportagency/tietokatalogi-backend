version: 0.2
env:
  secrets-manager:
    LOCAL_JDBC_HOST: "dev/hassu/db:host"
    LOCAL_JDBC_PORT: "dev/hassu/db:port"
    LOCAL_JDBC_DBNAME: "dev/hassu/db:dbname"
    LOCAL_JDBC_USERNAME: "dev/hassu/db:username"
    LOCAL_JDBC_PASSWORD: "dev/hassu/db:password"
    LOCAL_JDBC_SCHEMA: "dev/hassu/db:schema"
phases:
  pre_build:
    commands:
      - echo Logging to ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
      - set
  build:
    commands:
      - echo Build started on `date`
      - sed -i 's/!dbhost!/'${LOCAL_JDBC_HOST}'/' ./src/main/resources/hibernate.cfg.aws.xml
      - sed -i 's/!dbport!/'${LOCAL_JDBC_PORT}'/' ./src/main/resources/hibernate.cfg.aws.xml
      - sed -i 's/!dbname!/'${LOCAL_JDBC_DBNAME}'/' ./src/main/resources/hibernate.cfg.aws.xml
      - sed -i 's/!dbschema!/'${LOCAL_JDBC_SCHEMA}'/' ./src/main/resources/hibernate.cfg.aws.xml
      - sed -i 's/!dbusername!/'${LOCAL_JDBC_USERNAME}'/' ./src/main/resources/hibernate.cfg.aws.xml
      - sed -i 's/!dbpassword!/'${LOCAL_JDBC_PASSWORD}'/' ./src/main/resources/hibernate.cfg.aws.xml
      - rm ./src/main/resources/hibernate.cfg.xml
      - mv ./src/main/resources/hibernate.cfg.aws.xml ./src/main/resources/hibernate.cfg.xml
      - mvn clean install -Dmaven.test.skip=true
      - docker build -f Dockerfile.aws -t $ECR_REPOSITORY_NAME:latest .
  post_build:
    commands:
      - echo Post-build started on `date`
      - docker tag $ECR_REPOSITORY_NAME:latest $ECR_REPOSITORY_URI:latest
      - docker tag $ECR_REPOSITORY_NAME:latest $ECR_REPOSITORY_URI:$CODEBUILD_BUILD_NUMBER
      - docker push $ECR_REPOSITORY_URI:latest
      - docker push $ECR_REPOSITORY_URI:$CODEBUILD_BUILD_NUMBER
      - printf '[{"name":"%s","imageUri":"%s"}]' $ECS_SERVICE_NAME $ECR_REPOSITORY_URI:latest > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
